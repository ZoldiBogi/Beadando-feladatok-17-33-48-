# Beadandó /17,33,48/

# 17. Készíts egy függvényt, aminek az egyik bemenete egy természetes szám (n) és egy karakter
# (pl.: #) a másik. A függvény készítsen el egy n darab fokból álló lépcsőt úgy, hogy a megadott
# karakter legyen a lépcső „váza”. pl: lépcső(4,’#’)
#  _
#  _ #
#  _ # #
# _ # # #

def lépcső(n,karakter):
    print(" "*n)
    for i in range(1, n ):
       print(' ' * (n - i) + karakter* i)

n=int(input("n= "))
karakter=str(input("karakter= "))

lépcső(n,karakter)

# 33. Készítsen programot, amely egy bemeneti string-ről eldönti, hogy az helyes e-mail cím-e vagy
# sem. A helyes cím alakja a következő: “azonosito@domain”.

# - azonosito:
# o nem tartalmazhat szóközöket és a következő karaktereket: “_,?!*:; ” (vigyázat,
# pontot tartalmazhat)

# - domain:
# o a vége megfelel az engedélyezett formáknak amely egy bővíthető listában van
# tárolva. A lista: [“.com”, “.hu”]
# o az eleje nem kezdődhet nagy betűvel és nem tartalmazhat szóközöket és a 
# következő karaktereket: “ ,?!*_:; ”

# Példák: asd.asd@vlaami.hu -> valid
# Asd?@valami.com -> nem valid
# asdasd@valami.gb -> nem valid
# asd@Valami.com -> nem valid
# asd(kukac)valami.hu -> nem valid# 


#48 Írjon programot, amely létrehoz egy random vektort, valamint bekér a felhasználótól egy
kezdőindexet, egy végindexet és egy + vagy – jelet. A program + jel esetén rendezze a vektor
elemeit a bekért indexek között növekvő sorrendben, - jel esetén csökkenő sorrendben. A
program szúrjon be két | jelet a rendezett részsorozat elé, és mögé. A program kérje be a 
felhasználótól a vektor méretét, valamint a random intervallum kezdő-, illetve végértékeit.
Példa bemenet: 10 elemű vektor 1 – 20 közötti érétkekkel
vektor = [2,15,3,16,8,7,11,3,19,2]
3 8 +
Példa kimenet:
vektor = [2,15,3,|,3,7,8,11,16,19,|,2]
