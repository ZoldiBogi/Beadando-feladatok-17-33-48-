# Beadandó /17,33,48/

# 17. Készíts egy függvényt, aminek az egyik bemenete egy természetes szám (n) és egy karakter
# (pl.: #) a másik. A függvény készítsen el egy n darab fokból álló lépcsőt úgy, hogy a megadott
# karakter legyen a lépcső „váza”. pl: lépcső(4,’#’)
#  _
#  _ #
#  _ # #
# _ # # #


lépcső(n,karakter)

def lépcső(n,karakter):
    fok=0
    while (n+2)>=fok:
        print(" "*n,karakter*fok)
        fok=fok+1
        n=n-1

n=int(input("n= "))
karakter=str(input("karakter= "))

lépcső(n,karakter)

#lehet hogy inkább forral kéne

# 33. Készítsen programot, amely egy bemeneti string-ről eldönti, hogy az helyes e-mail cím-e vagy
# sem. A helyes cím alakja a következő: “azonosito@domain”.

# - azonosito:
# o nem tartalmazhat szóközöket és a következő karaktereket: “_,?!*:; ” (vigyázat,
# pontot tartalmazhat)

# - domain:
# o a vége megfelel az engedélyezett formáknak amely egy bővíthető listában van
# tárolva. A lista: [“.com”, “.hu”]
# o az eleje nem kezdődhet nagy betűvel és nem tartalmazhat szóközöket és a 
# következő karaktereket: “ ,?!*_:; ”

# Példák: asd.asd@vlaami.hu -> valid
# Asd?@valami.com -> nem valid
# asdasd@valami.gb -> nem valid
# asd@Valami.com -> nem valid
# asd(kukac)valami.hu -> nem valid# 


# 44. Írjon programot, amely bekér egy n számot, majd pedig n alkalommal soronként számokat
# szóközzel elválasztva. A program számolja a számsorban szereplő pozitív, illetve negatív
# számok szórását külön-külön. A program írjon ki egy üzenetet a felhasználónak, ha nem
# számolható valamelyik szórás.
# Példa bemenet: n = 2
# 2 15 -3 4 -9
# 2 5 9
# Példa kimenet:
# Pozitív szórás: 7, negatív szórás: 3
# Poziítv szórás: 2.86, negatív szórás nem számolható# 
